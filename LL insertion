1.LL insertion at the begin.

#include<stdio.h>
#include<malloc.h>
typedef struct Node
{
    int data;
    struct Node *next;
}node;
node *newnode,*shadow,*tptr,*start=NULL;
void insert(int num)
{
    newnode=(node *)malloc(sizeof(node));
    newnode -> data=num;
    newnode -> next=NULL;
    for(tptr=start;tptr;shadow=tptr,tptr=tptr -> next);
    if(tptr==start)
    {
        start=newnode;
    }
    else
    {
        newnode->next=start;
        start=newnode;
    }
}
void display()
{
    for(tptr=start;tptr;tptr=tptr->next)
    {
        printf("%d-->",tptr->data);
    }
    printf("none");
}
void main()
{
    insert(10);
    insert(5);
    insert(7);
    display();
}
________________________________________________________________________________________________________________________________________________________________
2.LL insertion at the end

#include<stdio.h>
#include<malloc.h>
typedef struct Node
{
    int data;
    struct Node *next;
}node;
node *newnode,*shadow,*tptr,*start=NULL;
void insert(int num)
{
    newnode=(node *)malloc(sizeof(node));
    newnode -> data=num;
    newnode -> next=NULL;
    for(tptr=start;tptr;shadow=tptr,tptr=tptr -> next);
    if(tptr==start)
    {
        start=newnode;
    }
    else
    {
        newnode -> next = shadow -> next;
        shadow -> next =newnode;
    }
}
void display()
{
    for(tptr=start;tptr;tptr=tptr->next)
    {
        printf("%d-->",tptr->data);
    }
    printf("none");
}
void main()
{
    insert(10);
    insert(5);
    insert(7);
    display();
}
______________________________________________________________________________________________________________________________________________________________________________
